/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp cn.kylinos.Kmre.Manager.xml -i metatypes.h -a kmre_manager
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "kmre_manager.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class ManagerAdaptor
 */

ManagerAdaptor::ManagerAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

ManagerAdaptor::~ManagerAdaptor()
{
    // destructor
}

void ManagerAdaptor::addOneRecord(const QString &path, const QString &mime_type)
{
    // handle method call cn.kylinos.Kmre.Manager.addOneRecord
    QMetaObject::invokeMethod(parent(), "addOneRecord", Q_ARG(QString, path), Q_ARG(QString, mime_type));
}

void ManagerAdaptor::closeApp(const QString &appName, const QString &pkgName, bool forceKill)
{
    // handle method call cn.kylinos.Kmre.Manager.closeApp
    QMetaObject::invokeMethod(parent(), "closeApp", Q_ARG(QString, appName), Q_ARG(QString, pkgName), Q_ARG(bool, forceKill));
}

void ManagerAdaptor::commandToGetAllFiles(int type)
{
    // handle method call cn.kylinos.Kmre.Manager.commandToGetAllFiles
    QMetaObject::invokeMethod(parent(), "commandToGetAllFiles", Q_ARG(int, type));
}

void ManagerAdaptor::controlApp(int id, const QString &pkgName, int event_type)
{
    // handle method call cn.kylinos.Kmre.Manager.controlApp
    QMetaObject::invokeMethod(parent(), "controlApp", Q_ARG(int, id), Q_ARG(QString, pkgName), Q_ARG(int, event_type));
}

bool ManagerAdaptor::filesIsEmpty()
{
    // handle method call cn.kylinos.Kmre.Manager.filesIsEmpty
    bool ret;
    QMetaObject::invokeMethod(parent(), "filesIsEmpty", Q_RETURN_ARG(bool, ret));
    return ret;
}

AndroidMetaList ManagerAdaptor::getAllFiles(const QString &uri, bool reverse)
{
    // handle method call cn.kylinos.Kmre.Manager.getAllFiles
    AndroidMetaList result;
    QMetaObject::invokeMethod(parent(), "getAllFiles", Q_RETURN_ARG(AndroidMetaList, result), Q_ARG(QString, uri), Q_ARG(bool, reverse));
    return result;
}

QString ManagerAdaptor::getCameraDevice()
{
    // handle method call cn.kylinos.Kmre.Manager.getCameraDevice
    QString device;
    QMetaObject::invokeMethod(parent(), "getCameraDevice", Q_RETURN_ARG(QString, device));
    return device;
}

QString ManagerAdaptor::getDisplayInformation()
{
    // handle method call cn.kylinos.Kmre.Manager.getDisplayInformation
    QString info;
    QMetaObject::invokeMethod(parent(), "getDisplayInformation", Q_RETURN_ARG(QString, info));
    return info;
}

QString ManagerAdaptor::getSystemProp(int event_type, const QString &value_field)
{
    // handle method call cn.kylinos.Kmre.Manager.getSystemProp
    QString value;
    QMetaObject::invokeMethod(parent(), "getSystemProp", Q_RETURN_ARG(QString, value), Q_ARG(int, event_type), Q_ARG(QString, value_field));
    return value;
}

bool ManagerAdaptor::isHostSupportDDS()
{
    // handle method call cn.kylinos.Kmre.Manager.isHostSupportDDS
    bool value;
    QMetaObject::invokeMethod(parent(), "isHostSupportDDS", Q_RETURN_ARG(bool, value));
    return value;
}

void ManagerAdaptor::quit()
{
    // handle method call cn.kylinos.Kmre.Manager.quit
    QMetaObject::invokeMethod(parent(), "quit");
}

void ManagerAdaptor::removeOneRecord(const QString &path, const QString &mime_type)
{
    // handle method call cn.kylinos.Kmre.Manager.removeOneRecord
    QMetaObject::invokeMethod(parent(), "removeOneRecord", Q_ARG(QString, path), Q_ARG(QString, mime_type));
}

void ManagerAdaptor::setCameraDevice(const QString &device)
{
    // handle method call cn.kylinos.Kmre.Manager.setCameraDevice
    QMetaObject::invokeMethod(parent(), "setCameraDevice", Q_ARG(QString, device));
}

void ManagerAdaptor::setSystemProp(int event_type, const QString &value_field, const QString &value)
{
    // handle method call cn.kylinos.Kmre.Manager.setSystemProp
    QMetaObject::invokeMethod(parent(), "setSystemProp", Q_ARG(int, event_type), Q_ARG(QString, value_field), Q_ARG(QString, value));
}

